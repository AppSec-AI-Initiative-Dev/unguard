# Copyright 2023 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: skaffold/v3alpha1
kind: Config
metadata:
  name: unguard
build:
  artifacts:
    # context is the directory with the Dockerfile for that image
    - image: unguard_proxy_service
      context: src/proxy-service
    - image: unguard_envoy_proxy
      context: src/envoy-proxy
    - image: unguard_frontend
      context: src/frontend
    - image: unguard_microblog_service # adapt jib patch index below if you move this item
      context: src/microblog-service
    - image: unguard_user_simulator
      context: src/user-simulator
    - image: unguard_user_auth_service
      context: src/user-auth-service
    - image: unguard_ad_service
      context: src/ad-service
    - image: unguard_membership_service
      context: src/membership-service
    - image: unguard_status_service
      context: src/status-service
    - image: unguard_profile_service
      context: src/profile-service
    - image: unguard_db_readiness_check
      context: src/db-readiness-check
    - image: unguard_malicious_load_generator
      context: src/malicious-load-generator


  local:
    # only the docker CLI respects a manually logged-in daemon
    useDockerCLI: true
    # BuildKit provides an improvement on performance
    useBuildkit: true

deploy:
  kubectl:
    { }
  helm:
    releases:
      - name: unguard
        chartPath: ./unguard-chart
        namespace: unguard
        createNamespace: true
        valuesFiles: [ "./unguard-chart/values.yaml" ]
        setValueTemplates:
          # ad-service
          adService.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_ad_service}}"
          adService.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_ad_service}}@{{.IMAGE_DIGEST_unguard_ad_service}}"
          # envoy-proxy
          envoyProxy.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_envoy_proxy}}"
          envoyProxy.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_envoy_proxy}}@{{.IMAGE_DIGEST_unguard_envoy_proxy}}"
          # db-readiness-check
          dbReadinessCheck.image.repository: "{{.IMAGE_REPO_unguard_db_readiness_check}}"
          dbReadinessCheck.image.tag: "{{.IMAGE_TAG_unguard_db_readiness_check}}@{{.IMAGE_DIGEST_unguard_db_readiness_check}}"
          # frontend
          frontend.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_frontend}}"
          frontend.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_frontend}}@{{.IMAGE_DIGEST_unguard_frontend}}"
          # microblog-service
          microblogService.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_microblog_service }}"
          microblogService.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_microblog_service }}@{{.IMAGE_DIGEST_unguard_microblog_service }}"
          # proxy-service
          proxyService.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_proxy_service}}"
          proxyService.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_proxy_service}}@{{.IMAGE_DIGEST_unguard_proxy_service}}"
          # user-simulator
          userSimulator.cronJob.jobTemplate.container.image.repository: "{{.IMAGE_REPO_unguard_user_simulator}}"
          userSimulator.cronJob.jobTemplate.container.image.tag: "{{.IMAGE_TAG_unguard_user_simulator}}@{{.IMAGE_DIGEST_unguard_user_simulator}}"
          # user-auth-service
          userAuthService.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_user_auth_service}}"
          userAuthService.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_user_auth_service}}@{{.IMAGE_DIGEST_unguard_user_auth_service}}"
          # membership-service
          membershipService.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_membership_service}}"
          membershipService.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_membership_service}}@{{.IMAGE_DIGEST_unguard_membership_service}}"
          # status-service
          statusService.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_status_service}}"
          statusService.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_status_service}}@{{.IMAGE_DIGEST_unguard_status_service}}"
          # profile-service
          profileService.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_profile_service}}"
          profileService.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_profile_service}}@{{.IMAGE_DIGEST_unguard_profile_service}}"
          # malicious-load-generator
          maliciousLoadGenerator.deployment.container.image.repository: "{{.IMAGE_REPO_unguard_malicious_load_generator}}"
          maliciousLoadGenerator.deployment.container.image.tag: "{{.IMAGE_TAG_unguard_malicious_load_generator}}@{{.IMAGE_DIGEST_unguard_malicious_load_generator}}"


profiles:
  - name: jaeger-dev
    # IF THIS PROFILE IS USED IT HAS TO BE INVOKED AS THE LAST PROFILE IN THE LIST
    # E.g.: "skaffold run -p localdev-minikube,tracing,jaeger-dev"
    patches:
      - op: add
        path: /deploy/helm/releases/0/valuesFiles/-
        value: "./unguard-chart/jaegerDev.yaml"
      - op: add
        path: /deploy/helm/releases/0
        value:
          name: jaeger-operator
          remoteChart: jaeger-operator
          repo: https://jaegertracing.github.io/helm-charts
          version: 2.22.0
          namespace: unguard
          createNamespace: true
          wait: true

  - name: jib
    patches:
      - op: add
        path: /build/artifacts/2/jib
        value: { }

  - name: tracing
    patches:
      - op: add
        path: /deploy/helm/releases/0/valuesFiles/-
        value: "./unguard-chart/tracing.yaml"

  - name: aws
    # automatic regex-based activation would conflict with
    # aws profiles that inherit from this skaffold.yaml file
    # activation: [{ kubeContext: arn:aws:eks:* }]
    patches:
      - op: add
        path: /deploy/helm/releases/0/valuesFiles/-
        value: "./unguard-chart/aws.yaml"

  - name: localdev-minikube
    patches:
      - op: add
        path: /deploy/helm/releases/1/valuesFiles/-
        value: "./unguard-chart/localDevMinikube.yaml"

  - name: malicious-load-generator
    patches:
      - op: add
        path: /deploy/helm/releases/0/valuesFiles/-
        value: "./unguard-chart/maliciousLoadGenerator.yaml"

# KIND IS NOT YET SUPPORTED
#  - name: localdev-kind
#    manifests:
#      kustomize:
#        paths:
#          - ./k8s-manifests/localdev/kind
