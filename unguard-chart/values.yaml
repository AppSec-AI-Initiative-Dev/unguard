# Default values for unguard-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
kubernetesClusterDomain: cluster.local

localDev:
  minikube:
    enabled: true
  kind:
    enabled: false


aws:
  enabled: false

services:
  adService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/unguard-ad-service
      tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
      pullPolicy: IfNotPresent
  envoyProxy:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/unguard-envoy-proxy
      tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
      pullPolicy: IfNotPresent

  frontend:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/unguard-frontend
      tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
      pullPolicy: IfNotPresent
  microblogService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/unguard-microblog-service
      tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
      pullPolicy: IfNotPresent
  proxyService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/unguard-proxy-service
      tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
      pullPolicy: IfNotPresent
  userSimulator:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/unguard-user-simulator
      tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
      pullPolicy: IfNotPresent
  userAuthService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/unguard-user-auth-service
      tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
      pullPolicy: IfNotPresent



profileService:
  name: profile-service

  service:
    type: ClusterIP
    ports:
      - targetPort: 8080
        port: 80
  deployment:
    strategy:
      type: Recreate
    container:
      image:
        repository: ghcr.io/dynatrace-oss/unguard/unguard-profile-service
        tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
        pullPolicy: IfNotPresent
      ports:
        containerPort: 8080
      env:
        otelMetricsExporter: none
        otelResourceAttributes: service.name=unguard-profile-service
        otelTracesExporter: none
        springDatasourcePassword: password
        springDatasourceUrl: jdbc:h2:file:./database/bio
        springDatasourceUsername: sa
      livenessProbe:
        httpGet:
          path: /healthz
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 15

membershipService:
  name: membership-service

  service:
    type: ClusterIP
    ports:
      - targetPort: 8080
        port: 80

  deployment:
    strategy:
      type: Recreate
    container:
      image:
        repository: ghcr.io/dynatrace-oss/unguard/unguard-profile-service
        tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
        pullPolicy: IfNotPresent
      ports:
        containerPort: 8083
      env:
        ASPNETCORE_ENVIRONMENT: Development
        SERVER_PORT: 8083
        API_PATH: /membership-service
        MARIADB_SERVICE: unguard-mariadb
        MARIADB_PASSWORD:
          secretKeyRef:
            name: unguard-mariadb
            key: mariadb-root-password


adService:
  name: ad-service

  service:
    type: ClusterIP
    ports:
      - targetPort: 8082
        port: 80

  deployment:
    strategy:
      type: Recreate
    container:
      image:
        repository: ghcr.io/dynatrace-oss/unguard/unguard-ad-service
        tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
        pullPolicy: IfNotPresent
      ports:
        containerPort: 8082
      env:
        JAEGER_SERVICE_NAME: unguard-ad-service
        JAEGER_AGENT_HOST: jaeger-agent # change depending on your jaeger deployment
        JAEGER_SAMPLER_TYPE: const
        JAEGER_SAMPLER_PARAM: 0
        JAEGER_DISABLED: true
        ASPNETCORE_ENVIRONMENT: Production
        SERVER_PORT: 8082
        API_PATH: /ad-service
        USER_AUTH_SERVICE_ADDRESS: unguard-user-auth-service


dbReadinessCheck:
  name: db-readiness-check
  image:
    repository: ghcr.io/dynatrace-oss/unguard/unguard-db-readiness-check
    tag: latest
    pullPolicy: IfNotPresent
  command: /check.sh
  env:
    MYSQL_USER: root
    MYSQL_HOST: unguard-mariadb
    MYSQL_PASSWORD:
      secretKeyRef:
        name: unguard-mariadb
        key: mariadb-root-password

statusService:
  name: status-service

  service:
    type: ClusterIP
    ports:
      - targetPort: 8083
        port: 80

  serviceAccount:
    name: unguard-status

  role:
    name: status-role
    rules:
      - apiGroups: [ "apps" ]
        resources: [ "deployments" ]
        verbs: [ "get", "list" ]
      - apiGroups: [ "" ]
        resources: [ "pods" ]
        verbs: [ "get", "list" ]

  roleBindings:
    name: status-rolebinding
    subjects:
      - kind: ServiceAccount
        name: unguard-status
        apiGroup: ""
    roleRef:
      kind: Role
      name: status-role
      apiGroup: rbac.authorization.k8s.io

  deployment:
    strategy:
      type: Recreate
    container:
      image:
        repository: ghcr.io/dynatrace-oss/unguard/unguard-status-service
        tag: 21d9943b5f45e4c615296ad48a8f4b969972ab70
        pullPolicy: IfNotPresent
      ports:
        containerPort: 8083
      env:
        SERVER_PORT: 8083
        API_PATH: /status-service
        KUBERNETES_NAMESPACE: unguard
        IGNORED_DEPLOYMENTS: unguard-user-simulator # add deployments to ignore separated by spaces




mariadb:
  primary:
    persistence:
      enabled: false
