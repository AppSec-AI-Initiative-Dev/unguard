# Default values for unguard-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
kubernetesClusterDomain: cluster.local

localDev:
  minikube:
    enabled: true
  kind:
    enabled: false


aws:
  enabled: false

services:
  adService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/ad-service
      tag: v1.2.0
      pullPolicy: IfNotPresent
  envoyProxy:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/envoy-proxy
      tag: v1.2.0
      pullPolicy: IfNotPresent
  dbReadinessCheck:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/db-readiness-check
      tag: v1.2.0
      pullPolicy: IfNotPresent
  frontend:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/frontend
      tag: v1.2.0
      pullPolicy: IfNotPresent
  microblogService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/microblog-service
      tag: v1.2.0
      pullPolicy: IfNotPresent
  proxyService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/proxy-service
      tag: v1.2.0
      pullPolicy: IfNotPresent
  userSimulator:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/user-simulator
      tag: v1.2.0
      pullPolicy: IfNotPresent
  userAuthService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/user-auth-service
      tag: v1.2.0
      pullPolicy: IfNotPresent
  membershipService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/membership-service
      tag: v1.2.0
      pullPolicy: IfNotPresent
  statusService:
    image:
      repository: ghcr.io/dynatrace-oss/unguard/status-service
      tag: v1.2.0
      pullPolicy: IfNotPresent


profileService:
  name: profile-service

  service:
    type: ClusterIP
    ports:
      - targetPort: 8080
        port: 80
  deployment:
    strategy:
      type: Recreate
    container:
      image:
        repository: ghcr.io/dynatrace-oss/unguard/profile-service
        tag: v1.2.0
        pullPolicy: IfNotPresent
      ports:
        containerPort: 8080
      env:
        otelMetricsExporter: none
        otelResourceAttributes: service.name=unguard-profile-service
        otelTracesExporter: none
        springDatasourcePassword: password
        springDatasourceUrl: jdbc:h2:file:./database/bio
        springDatasourceUsername: sa
      livenessProbe:
        httpGet:
          path: /healthz
          port: 8080
        initialDelaySeconds: 5
        periodSeconds: 15


statusService:
  name: status-service

  service:
    type: ClusterIP
    ports:
      - targetPort: 8083
        port: 80

  serviceAccount:
    name: unguard-status

  role:
    name: status-role
    rules:
      - apiGroups: [ "apps" ]
        resources: [ "deployments" ]
        verbs: [ "get", "list" ]
      - apiGroups: [ "" ]
        resources: [ "pods" ]
        verbs: [ "get", "list" ]

  roleBindings:
    name: status-rolebinding
    subjects:
      - kind: ServiceAccount
        name: unguard-status
        apiGroup: ""
    roleRef:
      kind: Role
      name: status-role
      apiGroup: rbac.authorization.k8s.io

  deployment:
    strategy:
      type: Recreate
    container:
      image:
        repository: ghcr.io/dynatrace-oss/unguard/status-service
        tag: v1.2.0
        pullPolicy: IfNotPresent
      ports:
        containerPort: 8083
      env:
        SERVER_PORT: 8083
        API_PATH: /status-service
        KUBERNETES_NAMESPACE: unguard
        IGNORED_DEPLOYMENTS: unguard-user-simulator # add deployments to ignore separated by spaces




mariadb:
  primary:
    persistence:
      enabled: false
